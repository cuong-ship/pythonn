import json

# ------------------ L·ªõp Sinh Vi√™n ------------------
class SinhVien:
    def __init__(self, ma, ten, lop, ngay_sinh):
        self.ma = ma
        self.ten = ten
        self.lop = lop
        self.ngay_sinh = ngay_sinh
        self.diem = {}

    def to_dict(self):
        return {
            "ma": self.ma,
            "ten": self.ten,
            "lop": self.lop,
            "ngay_sinh": self.ngay_sinh,
            "diem": self.diem
        }

    @staticmethod
    def from_dict(data):
        sv = SinhVien(data["ma"], data["ten"], data["lop"], data["ngay_sinh"])
        sv.diem = data.get("diem", {})
        return sv


# ------------------ L·ªõp Qu·∫£n L√Ω ------------------
class QuanLyDiem:
    def __init__(self):
        self.ds = []

    def khoi_tao(self):
        self.ds = []
        print("Danh s√°ch ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o.")

    def danh_sach_rong(self):
        return len(self.ds) == 0

    def them_dau(self, sv):
        self.ds.insert(0, sv)

    def them_cuoi(self, sv):
        self.ds.append(sv)

    def hien_thi(self):
        if not self.ds:
            print(" Danh s√°ch r·ªóng.")
        else:
            print("\n DANH S√ÅCH SINH VI√äN:")
            for sv in self.ds:
                print(f"{sv.ma} | {sv.ten} | L·ªõp: {sv.lop} | Ng√†y sinh: {sv.ngay_sinh} | ƒêi·ªÉm: {sv.diem}")

    def tim_ma(self, ma):
        return next((sv for sv in self.ds if sv.ma == ma), None)

    def xoa_ma(self, ma):
        truoc = len(self.ds)
        self.ds = [sv for sv in self.ds if sv.ma != ma]
        if len(self.ds) < truoc:
            print(" ƒê√£ x√≥a sinh vi√™n.")
        else:
            print(" Kh√¥ng t√¨m th·∫•y m√£.")

    def ghi_file(self, ten_file):
        with open(ten_file, "w", encoding="utf-8") as f:
            json.dump([sv.to_dict() for sv in self.ds], f, ensure_ascii=False, indent=2)
        print(f" ƒê√£ ghi v√†o file {ten_file}")

    def doc_file(self, ten_file):
        try:
            with open(ten_file, "r", encoding="utf-8") as f:
                data = json.load(f)
                self.ds = [SinhVien.from_dict(sv) for sv in data]
            print(f" ƒê√£ ƒë·ªçc danh s√°ch t·ª´ file {ten_file}")
        except FileNotFoundError:
            print(" File kh√¥ng t·ªìn t·∫°i.")

    def nhap_diem(self, ma_sv, mon, diem):
        sv = self.tim_ma(ma_sv)
        if sv:
            try:
                diem = float(diem)
                sv.diem[mon] = diem
                print(" ‚úÖ Nh·∫≠p ƒëi·ªÉm th√†nh c√¥ng.")
            except ValueError:
                print(" ‚ùå ƒêi·ªÉm kh√¥ng h·ª£p l·ªá.")
        else:
            print(" ‚ùå Kh√¥ng t√¨m th·∫•y sinh vi√™n.")

    def diem_trung_binh(self, sv):
        if not sv.diem:
            return None
        return round(sum(sv.diem.values()) / len(sv.diem), 2)


# ------------------ Nh·∫≠p t·ª´ b√†n ph√≠m ------------------
def nhap_sinh_vien():
    ma = input(" Nh·∫≠p m√£ sinh vi√™n: ")
    ten = input(" Nh·∫≠p h·ªç t√™n: ")
    lop = input(" Nh·∫≠p l·ªõp: ")
    ngay_sinh = input(" Nh·∫≠p ng√†y sinh: ")
    return SinhVien(ma, ten, lop, ngay_sinh)


# ------------------ Menu ------------------
def menu():
    ql = QuanLyDiem()
    while True:
        print("\n--------- MENU QU·∫¢N L√ù ƒêI·ªÇM THI ---------")
        print("1. Kh·ªüi t·∫°o danh s√°ch")
        print("2. Th√™m sinh vi√™n v√†o ƒë·∫ßu")
        print("3. Th√™m sinh vi√™n v√†o cu·ªëi")
        print("4. Hi·ªÉn th·ªã danh s√°ch sinh vi√™n")
        print("5. Nh·∫≠p ƒëi·ªÉm cho sinh vi√™n")
        print("6. T√≠nh ƒëi·ªÉm trung b√¨nh c·ªßa sinh vi√™n")
        print("7. T√¨m sinh vi√™n theo m√£")
        print("8. X√≥a sinh vi√™n theo m√£")
        print("9. Ghi danh s√°ch ra file")
        print("10. ƒê·ªçc danh s√°ch t·ª´ file")
        print("0. Tho√°t")
        chon = input("üëâ Nh·∫≠p l·ª±a ch·ªçn: ")

        if chon == '1':
            ql.khoi_tao()
        elif chon == '2':
            sv = nhap_sinh_vien()
            ql.them_dau(sv)
        elif chon == '3':
            sv = nhap_sinh_vien()
            ql.them_cuoi(sv)
        elif chon == '4':
            ql.hien_thi()
        elif chon == '5':
            ma = input(" Nh·∫≠p m√£ sinh vi√™n: ")
            mon = input(" Nh·∫≠p t√™n m√¥n: ")
            diem = input(" Nh·∫≠p ƒëi·ªÉm: ")
            ql.nhap_diem(ma, mon, diem)
        elif chon == '6':
            ma = input(" Nh·∫≠p m√£ sinh vi√™n: ")
            sv = ql.tim_ma(ma)
            if sv:
                dtb = ql.diem_trung_binh(sv)
                if dtb is not None:
                    print(f" üëâ ƒêi·ªÉm trung b√¨nh: {dtb}")
                else:
                    print(" Ch∆∞a c√≥ ƒëi·ªÉm.")
            else:
                print(" Kh√¥ng t√¨m th·∫•y sinh vi√™n.")
        elif chon == '7':
            ma = input(" Nh·∫≠p m√£ c·∫ßn t√¨m: ")
            sv = ql.tim_ma(ma)
            if sv:
                print(f" {sv.ma} | {sv.ten} | L·ªõp: {sv.lop} | Ng√†y sinh: {sv.ngay_sinh} | ƒêi·ªÉm: {sv.diem}")
            else:
                print(" Kh√¥ng t√¨m th·∫•y.")
        elif chon == '8':
            ma = input(" Nh·∫≠p m√£ c·∫ßn x√≥a: ")
            ql.xoa_ma(ma)
        elif chon == '9':
            ql.ghi_file("diemthi.json")
        elif chon == '10':
            ql.doc_file("diemthi.json")
        elif chon == '0':
            print(" Tho√°t ch∆∞∆°ng tr√¨nh.")
            break
        else:
            print(" ‚ùó L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.")


# ------------------ Ch·∫°y ch∆∞∆°ng tr√¨nh ------------------
if __name__ == "__main__":
    menu()
